name: Build on macOS

on:
  push:
    branches: [main]
    paths:
      - 'CMakeLists.txt'
      - 'CefConfig.cmake'
      - 'include/**'
      - 'src/**'

  pull_request:
    branches: [main]
    paths:
      - 'CMakeLists.txt'
      - 'CefConfig.cmake'
      - 'include/**'
      - 'src/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          setup-python: 'false'

      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Cache CEF folders
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/dep
          key: ${{ runner.os }}-dep-cef

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -G "Xcode" -B ${{github.workspace}}/build -DPROJECT_ARCH=x86_64 -DTARGET_ARCH=x86_64 -DUSE_SANDBOX=ON

      - name: Build
        # Build your program with the given configuration
        run: xcodebuild -project ${{github.workspace}}/build/CefViewCore.xcodeproj -configuration ${{env.BUILD_TYPE}}
