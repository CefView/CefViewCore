name: Build on Linux

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/build-linux-x86_64.yml"
      - "CMakeLists.txt"
      - "CefConfig.cmake"
      - "include/**"
      - "src/**"

  pull_request:
    branches: [main]
    paths:
      - "CMakeLists.txt"
      - "CefConfig.cmake"
      - "include/**"
      - "src/**"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Cache CEF folders
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/dep
          key: ${{ runner.os }}-dep-cef

      - name: Install x11
        run: sudo apt-get install -y libx11-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DPROJECT_ARCH=x86_64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_SANDBOX=ON

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
